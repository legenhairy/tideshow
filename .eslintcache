[{"/Users/hzhang/Desktop/tide-app/src/index.js":"1","/Users/hzhang/Desktop/tide-app/src/reportWebVitals.js":"2","/Users/hzhang/Desktop/tide-app/src/App.js":"3","/Users/hzhang/Desktop/tide-app/src/components/DataTable.js":"4","/Users/hzhang/Desktop/tide-app/src/components/Waves.js":"5","/Users/hzhang/Desktop/tide-app/src/components/WaveLoader.js":"6"},{"size":547,"mtime":1608355056734,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1607105951762,"results":"9","hashOfConfig":"8"},{"size":18970,"mtime":1614923464396,"results":"10","hashOfConfig":"8"},{"size":902,"mtime":1608579417812,"results":"11","hashOfConfig":"8"},{"size":405,"mtime":1614641677457,"results":"12","hashOfConfig":"8"},{"size":493,"mtime":1614726141951,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1gds1u5",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/hzhang/Desktop/tide-app/src/index.js",[],["29","30"],"/Users/hzhang/Desktop/tide-app/src/reportWebVitals.js",[],"/Users/hzhang/Desktop/tide-app/src/App.js",["31","32","33","34","35","36","37","38"],"import React, { useState, useEffect } from \"react\";\nimport './App.css';\nimport { Line } from \"react-chartjs-2\";\nimport axios from \"axios\";\nimport Lottie from 'react-lottie';\nimport loader from './lotties/water-loader.json';\nimport Waves from './components/Waves';\nimport WaveLoader from './components/WaveLoader';\nimport DataTable from \"./components/DataTable\";\nimport CsvDownloader from 'react-csv-downloader';\n\nfunction App() {\n  const [tideData, setTideData] = useState({});\n  const [tideHeight, setTideHeight] = useState([]); //break it into its own state array\n  const [tideTable, setTideTable] = useState([]); //for the tide table\n  const [selectUnits, setSelectUnits] = useState('Meters'); //for the chart label\n  const [unitParam, setUnitParam] = useState('metric'); //for the api parameter\n  const [userTime, setUserTime] = useState('lst_ldt'); //for the user time zone\n  const [datum, setDatum] = useState('MLLW');\n  const [station, setStation] = useState('9414290');\n  //const [fromDay, setFromDay] = useState('2020');\n  const [isLoading, setIsLoading] = useState(false);\n  const [showChart, setShowChart] = useState(false); //for the rendering of the chart first time, then each state update just rerenders the chart\n\n  const getData = () => {\n    setIsLoading(true); //trigger the loading screen \n    //make the axios request, i mainly want the time data and their tide height properties\n    let tHeights = [];\n    let tDay = [];\n    \n    //on initial call, use the current date for the from date parameter\n    const today = new Date();\n    \n    let mon = today.getMonth() + 1; \n    //reformat the month and day - add a 0 in front of them if < 10 value\n    if(mon < 10) {\n      mon = \"0\" + mon.toString();\n    }\n    let day = today.getDate();\n    if(day < 10) {\n      day = \"0\" + day.toString();\n    }\n\n    let fromDate = today.getFullYear().toString() + mon + day;\n\n    /*by default, set the end date 7 days after the fromDate*/ \n\n    //make the api call for the noaa tide prediction api\n    const axioOptions = {\n      method: 'GET',\n      url: 'https://api.tidesandcurrents.noaa.gov/api/prod/datagetter',\n      params: {station: `${station}`, begin_date: `${fromDate}`, end_date: '20210310', product: 'predictions', datum: `${datum}`,\n        units: `${unitParam}`, time_zone: `${userTime}`, interval: 'hilo', format: 'json'},\n    };\n\n    axios.request(axioOptions).then(function(response) {\n      console.log(response); //for testing purposes\n      setIsLoading(false);\n      setTideTable(response.data.predictions);\n      displayChart(); //switch on the chart element\n      //get the time and date from the t element\n      for(const dataObj of response.data.predictions){\n        let timeInfo = dataObj.t.split(\" \"); //the time and date are seperated by whitespace\n        tDay.push([timeInfo[0], timeInfo[1]]);\n      }\n\n      //get the height from the v property\n      for(const extreme of response.data.predictions) {\n        tHeights.push(extreme.v);\n      }\n\n      setTideData({\n        labels: tDay,\n        datasets: [\n          {\n            data: tHeights,\n            fill: true,\n            backgroundColor: \"rgba(75,192,192,0.2)\",\n            borderColor: \"rgba(75,192,192,1)\",\n            borderWidth: 4,\n            pointHoverRadius: 5,\n            pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n          }\n        ]\n      });\n\n      setTideHeight(tHeights);\n      \n    }).catch(function(error) {\n      console.error(error);\n    });\n  }\n\n  const options = {\n    maintainAspectRatio: false,\n    responsive: true,\n    title: {\n      display: true,\n      text: [`Tide Levels for a Station (MLLW) in ${selectUnits}`, `Tide Predictions at ${station}, San Francisco Station`],\n      fontFamily: 'Arial'\n    },\n    legend: {\n      display: false\n    },\n    scales: {\n      yAxes: [\n        { //removed the ticks, chart automatically adjusts based on the data limits\n          scaleLabel: {\n            display: true,\n            fontStyle: 'bold',\n            labelString: `Height in ${selectUnits} (${datum})`\n          }\n        }\n      ],\n      xAxes: [\n        {\n          gridLines: {\n            display: true\n          },\n          scaleLabel: {\n            display: true,\n            labelString: 'Day/ Time of Tide'\n          }\n        }\n      ]\n    },\n    maintainAspectRatio: false,//this didnt make it full screen anymore for false\n  };\n\n  //Update the chart axis based on the unit chosen from the dropdown \n  const handleUnits = (e) => {\n    setSelectUnits(e.target.value);\n    //feet = pass in english for the api call, meters = pass in metric for the api call\n    if(e.target.value === 'Feet') {\n      setUnitParam('english');\n    } \n    if(e.target.value === 'Meters') {\n      setUnitParam('metric');\n    }\n  }\n\n  //this is for the station location, i.e. get predictions from a diff place in California\n  const changeStation = (e) => {\n    setStation(e.target.value);\n  }\n\n  const changeTimeZone = (e) => {\n    //update the time zone user selects in state\n    setUserTime(e.target.value);\n  }\n\n  const changeDatum = (e) => {\n    //update the datum in user state\n    setDatum(e.target.value);\n  };\n\n  //show the chart ONLY on the button click, prevent it from appearing until the FIRST button press\n  const displayChart = () => {\n    if(showChart === false) { //i dont want the button to act like a toggle between on and off\n      setShowChart(true);\n    }\n  }\n\n  const columns = [{\n    id: 't',\n    displayName: 'Time'\n  }, {\n    id: 'v',\n    displayName: 'Predicted Height'\n  }, {\n    id: 'type',\n    displayName: 'High/Low'\n  }];\n\n  const defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: loader,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid slice\"\n    }\n};\n\n\n  return (\n    <div className=\"App\">\n      {/* show this when the tideData is actually filled, after the api gets called (in place of the filters box?)*/}\n      {/* <div className=\"chart-container\"> \n        <Line data={tideData} options={options} />\n      </div> */}\n      {/* <div className=\"chooser\"> \n        <div className='column1'>\n          <h2>Options For</h2>\n          <select className='station-selector' defaultValue='9414290' onChange={changeStation}>\n            <option value=\"9414290\">9414290 San Francisco</option>\n            <option value=\"9413745\">9413745 Santa Cruz, Monterey Bay,CA</option>\n            <option value=\"9414275\">9414275 Ocean Beach, Outer Coast, CA</option>\n            <option value=\"9414806\">9414806 Sausalito, San Francisco, CA</option>\n          </select>\n          <h2>From:</h2>\n            <select className='month-selector' defaultValue='Feb'>\n              <option value=\"Jan\">January</option>\n              <option value=\"Feb\">Feburary</option>\n              <option value=\"March\">March</option>\n              <option value=\"April\">April</option>\n              <option value=\"June\">June</option>\n              <option value=\"July\">July</option>\n              <option value=\"August\">August</option>\n              <option value=\"September\">September</option>\n              <option value=\"October\">October</option>\n              <option value=\"November\">November</option>\n              <option value=\"December\">December</option>\n            </select>\n            <select className='day-selector' defaultValue='24'>\n              <option value=\"1\">1</option>\n              <option value=\"2\">2</option>\n              <option value=\"3\">3</option>\n              <option value=\"4\">4</option>\n              <option value=\"5\">5</option>\n              <option value=\"6\">6</option>\n              <option value=\"7\">7</option>\n              <option value=\"8\">8</option>\n              <option value=\"9\">9</option>\n              <option value=\"10\">10</option>\n              <option value=\"11\">11</option>\n              <option value=\"12\">12</option>\n              <option value=\"13\">13</option>\n              <option value=\"14\">14</option>\n              <option value=\"15\">15</option>\n              <option value=\"16\">16</option>\n              <option value=\"17\">17</option>\n              <option value=\"18\">18</option>\n              <option value=\"19\">19</option>\n              <option value=\"20\">20</option>\n              <option value=\"21\">21</option>\n              <option value=\"22\">22</option>\n              <option value=\"23\">23</option>\n              <option value=\"24\">24</option>\n              <option value=\"25\">25</option>\n            </select>\n            <select className='year-selector' defaultValue='2020'>\n              <option value=\"2020\">2020</option>\n              <option value=\"2021\">2021</option>\n              <option value=\"2022\">2022</option>\n              <option value=\"2023\">2023</option>\n              <option value=\"2024\">2024</option>\n            </select>\n          <h2>To:</h2>\n            <select className='month-selector' defaultValue='Feb'>\n              <option value=\"Jan\">January</option>\n              <option value=\"Feb\">Feburary</option>\n              <option value=\"March\">March</option>\n              <option value=\"April\">April</option>\n              <option value=\"June\">June</option>\n              <option value=\"July\">July</option>\n              <option value=\"August\">August</option>\n              <option value=\"September\">September</option>\n              <option value=\"October\">October</option>\n              <option value=\"November\">November</option>\n              <option value=\"December\">December</option>\n            </select>\n            <select className='day-selector' defaultValue='20'>\n              <option value=\"1\">1</option>\n              <option value=\"2\">2</option>\n              <option value=\"3\">3</option>\n              <option value=\"4\">4</option>\n              <option value=\"5\">5</option>\n              <option value=\"6\">6</option>\n              <option value=\"7\">7</option>\n              <option value=\"8\">8</option>\n              <option value=\"9\">9</option>\n              <option value=\"10\">10</option>\n              <option value=\"11\">11</option>\n              <option value=\"12\">12</option>\n              <option value=\"13\">13</option>\n              <option value=\"14\">14</option>\n              <option value=\"15\">15</option>\n              <option value=\"16\">16</option>\n              <option value=\"17\">17</option>\n              <option value=\"18\">18</option>\n              <option value=\"19\">19</option>\n              <option value=\"20\">20</option>\n              <option value=\"21\">21</option>\n              <option value=\"22\">22</option>\n              <option value=\"23\">23</option>\n              <option value=\"24\">24</option>\n            </select>\n            <select className='year-selector' defaultValue='2020'>\n              <option value=\"2020\">2020</option>\n              <option value=\"2021\">2021</option>\n              <option value=\"2022\">2022</option>\n              <option value=\"2023\">2023</option>\n              <option value=\"2024\">2024</option>\n            </select>\n          </div>\n        <div className='column2'>\n          <h3>Units</h3>\n            <select defaultValue='Meters' onChange={e => handleUnits(e)}>\n              <option value='Meters'>Meters</option>\n              <option value='Feet'>Feet</option>\n            </select>\n          <h3>Timezone</h3>\n            <select className='timezone-selector' defaultValue='lst_ldt' onChange={e => changeTimeZone(e)}>\n              <option value=\"gmt\">gmt</option>\n              <option value=\"lst\">lst</option>\n              <option value=\"lst_ldt\">lst_ldt</option>\n            </select>\n          <h3>Datum</h3>\n            <select className='datum-selector' defaultValue='MLLW' onChange={changeDatum}>\n              <option>MHHW</option>\n              <option>MHW</option>\n              <option>MTL</option>\n              <option value=\"MLLW\">MLLW</option>\n            </select>\n        </div>\n        <div className=\"column3\">\n          <h3>Shift Dates</h3>\n          <button className='back-date'>Back 1 Day</button>\n          <button className=\"forward-date\">Forward 1 Day</button>\n          <h3>Update</h3>\n          <button className='daily-submit' onClick={getData}>Plot Daily</button>\n          <button>Plot Calendar</button>\n        </div>\n      </div>\n      <div className='data-header'>\n        <h4>Data Listings</h4>\n        <CsvDownloader \n          text=\"Download as CSV\" \n          filename=\"tide-data\"\n          separator=\";\"\n          columns={columns}\n          data={tideData} \n          />\n      </div> */}\n\n      <div className=\"grid-container\">\n        <header className=\"tide-title\">TIDES</header>\n        <div className=\"main-content\"> \n          <div className=\"row\">\n            <div>\n              <h2>Station Name</h2>\n              <select className='station-selector' defaultValue='9414290' onChange={changeStation}>\n                <option value=\"9414290\">9414290 San Francisco</option>\n                <option value=\"9413745\">9413745 Santa Cruz, Monterey Bay,CA</option>\n                <option value=\"9414275\">9414275 Ocean Beach, Outer Coast, CA</option>\n                <option value=\"9414806\">9414806 Sausalito, San Francisco, CA</option>\n              </select>\n            </div>\n            <div>\n              <h2 className='from-select'>From:</h2>\n              <select className='month-selector' defaultValue='Feb'>\n                <option value=\"Jan\">January</option>\n                <option value=\"Feb\">Feburary</option>\n                <option value=\"March\">March</option>\n                <option value=\"April\">April</option>\n                <option value=\"June\">June</option>\n                <option value=\"July\">July</option>\n                <option value=\"August\">August</option>\n                <option value=\"September\">September</option>\n                <option value=\"October\">October</option>\n                <option value=\"November\">November</option>\n                <option value=\"December\">December</option>\n              </select>\n              <select className='day-selector' defaultValue='24'>\n                <option value=\"1\">1</option>\n                <option value=\"2\">2</option>\n                <option value=\"3\">3</option>\n                <option value=\"4\">4</option>\n                <option value=\"5\">5</option>\n                <option value=\"6\">6</option>\n                <option value=\"7\">7</option>\n                <option value=\"8\">8</option>\n                <option value=\"9\">9</option>\n                <option value=\"10\">10</option>\n                <option value=\"11\">11</option>\n                <option value=\"12\">12</option>\n                <option value=\"13\">13</option>\n                <option value=\"14\">14</option>\n                <option value=\"15\">15</option>\n                <option value=\"16\">16</option>\n                <option value=\"17\">17</option>\n                <option value=\"18\">18</option>\n                <option value=\"19\">19</option>\n                <option value=\"20\">20</option>\n                <option value=\"21\">21</option>\n                <option value=\"22\">22</option>\n                <option value=\"23\">23</option>\n                <option value=\"24\">24</option>\n                <option value=\"25\">25</option>\n              </select>\n            </div>\n            <div>\n              <h2 className='to-select'>To:</h2>\n              <select className='month-selector' defaultValue='Feb'>\n                <option value=\"Jan\">January</option>\n                <option value=\"Feb\">Feburary</option>\n                <option value=\"March\">March</option>\n                <option value=\"April\">April</option>\n                <option value=\"June\">June</option>\n                <option value=\"July\">July</option>\n                <option value=\"August\">August</option>\n                <option value=\"September\">September</option>\n                <option value=\"October\">October</option>\n                <option value=\"November\">November</option>\n                <option value=\"December\">December</option>\n              </select>\n              <select className='day-selector' defaultValue='20'>\n                <option value=\"1\">1</option>\n                <option value=\"2\">2</option>\n                <option value=\"3\">3</option>\n                <option value=\"4\">4</option>\n                <option value=\"5\">5</option>\n                <option value=\"6\">6</option>\n                <option value=\"7\">7</option>\n                <option value=\"8\">8</option>\n                <option value=\"9\">9</option>\n                <option value=\"10\">10</option>\n                <option value=\"11\">11</option>\n                <option value=\"12\">12</option>\n                <option value=\"13\">13</option>\n                <option value=\"14\">14</option>\n                <option value=\"15\">15</option>\n                <option value=\"16\">16</option>\n                <option value=\"17\">17</option>\n                <option value=\"18\">18</option>\n                <option value=\"19\">19</option>\n                <option value=\"20\">20</option>\n                <option value=\"21\">21</option>\n                <option value=\"22\">22</option>\n                <option value=\"23\">23</option>\n                <option value=\"24\">24</option>\n              </select>\n            </div>\n          </div>\n          <div className=\"row\">\n              <div>\n                <h3>Units</h3>\n                <select defaultValue='Meters' onChange={e => handleUnits(e)}>\n                  <option value='Meters'>Meters</option>\n                  <option value='Feet'>Feet</option>\n                </select>\n              </div>\n              \n              <div>\n                <h3>Timezone</h3>\n                <select className='timezone-selector' defaultValue='lst_ldt' onChange={e => changeTimeZone(e)}>\n                  <option value=\"gmt\">gmt</option>\n                  <option value=\"lst\">lst</option>\n                  <option value=\"lst_ldt\">lst_ldt</option>\n                </select>\n              </div>\n\n              <div>\n                <h3>Datum</h3>\n                <select className='datum-selector' defaultValue='MLLW' onChange={changeDatum}>\n                  <option>MHHW</option>\n                  <option>MHW</option>\n                  <option>MTL</option>\n                  <option value=\"MLLW\">MLLW</option>\n                </select>\n              </div>\n              <button className='search-tides' onClick={getData}>\n                {isLoading ? <Lottie options={defaultOptions} /> : 'GET YOUR TIDE'}\n              </button>\n          </div> \n          {/* place the chart container here only if the button has been clicked */}\n          {showChart ? \n            <div className=\"chart-container\"> \n              <Line data={tideData} options={options} />\n            </div>\n            : null\n          }\n        </div>\n        <div className='bottom-wave'> {/* wrap the animated wave with a container- looks better visually, otherwise it looks cut off*/}\n          <Waves />\n        </div>\n        \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/hzhang/Desktop/tide-app/src/components/DataTable.js",[],"/Users/hzhang/Desktop/tide-app/src/components/Waves.js",[],"/Users/hzhang/Desktop/tide-app/src/components/WaveLoader.js",[],["39","40"],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":1,"column":27,"nodeType":"47","messageId":"48","endLine":1,"endColumn":36},{"ruleId":"45","severity":1,"message":"49","line":8,"column":8,"nodeType":"47","messageId":"48","endLine":8,"endColumn":18},{"ruleId":"45","severity":1,"message":"50","line":9,"column":8,"nodeType":"47","messageId":"48","endLine":9,"endColumn":17},{"ruleId":"45","severity":1,"message":"51","line":10,"column":8,"nodeType":"47","messageId":"48","endLine":10,"endColumn":21},{"ruleId":"45","severity":1,"message":"52","line":14,"column":10,"nodeType":"47","messageId":"48","endLine":14,"endColumn":20},{"ruleId":"45","severity":1,"message":"53","line":15,"column":10,"nodeType":"47","messageId":"48","endLine":15,"endColumn":19},{"ruleId":"54","severity":1,"message":"55","line":127,"column":5,"nodeType":"56","messageId":"57","endLine":127,"endColumn":24},{"ruleId":"45","severity":1,"message":"58","line":164,"column":9,"nodeType":"47","messageId":"48","endLine":164,"endColumn":16},{"ruleId":"41","replacedBy":"59"},{"ruleId":"43","replacedBy":"60"},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'WaveLoader' is defined but never used.","'DataTable' is defined but never used.","'CsvDownloader' is defined but never used.","'tideHeight' is assigned a value but never used.","'tideTable' is assigned a value but never used.","no-dupe-keys","Duplicate key 'maintainAspectRatio'.","ObjectExpression","unexpected","'columns' is assigned a value but never used.",["61"],["62"],"no-global-assign","no-unsafe-negation"]